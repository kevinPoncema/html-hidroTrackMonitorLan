<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Listas de Tareas</title>
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        /* Estilos personalizados */
        @media (min-width: 992px) {
            /* Alinear elementos de búsqueda en el centro en pantallas grandes */
            .search-form {
                margin: auto;
            }
        }
    </style>
</head>
<body>

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">Listas de Tareas</a>
</nav>

<div class="container mt-4">
    <div class="row">
        <% if (rows && rows.length > 0) { %>
            <% rows.forEach(function(row) { %>
                <div class="col-md-12 mb-4">
                    <div class="card" data-list-id="<%= row.id_list %>">
                        <div class="card-header">
                            <input type="text" class="form-control list-title" value="<%= row.titulo_list %>">
                            <form action="/deleteList/<%= rows[0].id_list %>" method="get">
                                <button class="btn btn-danger float-right ml-2" type="submit">Eliminar Lista</button>
                            </form>
                            <button class="btn btn-primary float-right" data-toggle="modal" data-target="#agregarElementoModal" data-list-id="<%= row.id_list %>">Agregar</button>
                        </div>
                        <div class="card-body">
                            <ul class="list-group" id="conElementos">
                                <!-- Contenido de la lista -->
                                <% 
                                var idNum = 0;
                                Object.keys(row.contenido_list).forEach(function(key) { %>
                                    <li class="list-group-item" id="ElementoList<%= idNum %>">
                                        <span class="item-name <% if (!row.contenido_list[key]) { %>text-muted<% } %>">
                                            <%= key %>
                                        </span>
                                        <button class="btn btn-danger btn-sm float-right ml-2" onclick="eliminarElemento(<%= idNum %>)">-</button>
                                        <!-- Cambiando el texto del botón y llamando a la función marcarDesmarcarElemento -->
                                        <button class="btn btn-success btn-sm float-right" onclick="marcarDesmarcarElemento(<%= idNum %>)">
                                            <% if (row.contenido_list[key]) { %>Marcar<% } else { %>Desmarcar<% } %>
                                        </button>
                                    </li>
                                    <% idNum++; %>
                                <% }); %>
                            </ul>
                        </div>
                        
                        
                        <div class="card-footer">
                            <button class="btn btn-primary btn-sm" onclick="guardarCambios(this)">Guardar Cambios</button>
                        </div>
                    </div>
                </div>
            <% }); %>
        <% } else { %>
            <div class="col-md-12">
                <p>No hay listas disponibles</p>
            </div>
        <% } %>
    </div>
</div>

<!-- Modal para agregar un elemento -->
<div class="modal fade" id="agregarElementoModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Agregar Elemento</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="agregarElementoForm">
                    <div class="form-group">
                        <label for="elemento">Elemento</label>
                        <input type="text" class="form-control" id="elemento" name="elemento">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                <!-- Llamando a la función para agregar un elemento -->
                <button type="button" class="btn btn-primary" onclick="agregarElementoLista()">Agregar</button>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>
// Variable para mantener el contador de ID único para los elementos de la lista
let idNum = 0;

// Función para eliminar un elemento de la lista
function eliminarElemento(id) {
    // Obtener el elemento <li> por su ID
    const elemento = document.getElementById('ElementoList' + id);
    
    // Verificar si el elemento existe antes de intentar eliminarlo
    if (elemento) {
        // Eliminar el elemento del DOM
        elemento.remove();
        console.log('Elemento eliminado con éxito:', id);
    } else {
        console.log('No se encontró el elemento con ID:', id);
    }
}

// Función para marcar o desmarcar un elemento de la lista
function marcarDesmarcarElemento(id) {
    // Obtener el elemento <span> por su ID
    const spanElement = document.querySelector('#ElementoList' + id + ' .item-name');
    // Obtener el botón por su ID
    const buttonElement = document.querySelector('#ElementoList' + id + ' .btn-success');

    // Verificar si el elemento <span> existe antes de intentar marcarlo o desmarcarlo
    if (spanElement && buttonElement) {
        // Obtener el estado actual del elemento marcado
        const marked = (document.getElementById('ElementoList' + id).getAttribute('data-marked') === 'true');

        // Si está marcado, quitar el tachado y cambiar el texto del botón a "Marcar"
        if (marked) {
            spanElement.style.textDecoration = 'none';
            buttonElement.innerText = 'Marcar';
        } else {
            // Si no está marcado, aplicar el tachado y cambiar el texto del botón a "Desmarcar"
            spanElement.style.textDecoration = 'line-through';
            buttonElement.innerText = 'Desmarcar';
        }

        // Cambiar el estado marcado en el atributo data-marked del <li>
        document.getElementById('ElementoList' + id).setAttribute('data-marked', !marked);
        
        console.log('Elemento marcado/desmarcado con éxito:', id);
    } else {
        console.log('No se encontró el elemento para marcar/desmarcar con ID:', id);
    }
}

// Función para generar un ID aleatorio dentro del rango especificado
function generarIdAleatorio() {
    return Math.floor(Math.random() * (800 - 200 + 1)) + 200;
}

// Función para agregar un elemento a la lista
// Función para agregar un elemento a la lista
function agregarElementoLista() {
    // Obtener el texto del input
    const nuevoElemento = document.getElementById('elemento').value;

    // Generar un ID aleatorio
    const nuevoId = generarIdAleatorio();

    // Crear un nuevo elemento li
    const nuevoLi = document.createElement('li');
    nuevoLi.className = 'list-group-item';
    nuevoLi.id = 'ElementoList' + nuevoId;

    // Crear un span con el texto del input
    const nuevoSpan = document.createElement('span');
    nuevoSpan.className = 'item-name';
    nuevoSpan.innerText = nuevoElemento;

    // Crear botón para eliminar
    const botonEliminar = document.createElement('button');
    botonEliminar.className = 'btn btn-danger btn-sm float-right ml-2';
    botonEliminar.innerText = '-';
    botonEliminar.setAttribute('onclick', 'eliminarElemento(' + nuevoId + ')');

    // Crear botón para marcar/desmarcar
    const botonMarcarDesmarcar = document.createElement('button');
    botonMarcarDesmarcar.className = 'btn btn-success btn-sm float-right';
    botonMarcarDesmarcar.innerText = 'Marcar';
    botonMarcarDesmarcar.setAttribute('onclick', 'marcarDesmarcarElemento(' + nuevoId + ')');

    // Agregar el span y los botones al nuevo elemento li
    nuevoLi.appendChild(nuevoSpan);
    nuevoLi.appendChild(botonEliminar);
    nuevoLi.appendChild(botonMarcarDesmarcar);

    // Agregar el nuevo elemento li al contenedor de elementos
    document.getElementById('conElementos').appendChild(nuevoLi);

    // Cerrar el modal después de agregar el elemento
    $('#agregarElementoModal').modal('hide');
}


</script>

</body>
</html>
